//
// Generated file, do not edit! Created by opp_msgc 4.5 from src/node/application/cowReporting/CowReportingPacket.msg.
//

#ifndef _COWREPORTINGPACKET_M_H_
#define _COWREPORTINGPACKET_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0405
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "ApplicationPacket_m.h"
// }}



/**
 * Struct generated from src/node/application/cowReporting/CowReportingPacket.msg by opp_msgc.
 */
struct CowReportData
{
    CowReportData();
    opp_string nodeID;
    opp_string sim_time;
    double gps_x;
    double gps_y;
    double acel_x;
    double acel_y;
    double acel_z;
};

void doPacking(cCommBuffer *b, CowReportData& a);
void doUnpacking(cCommBuffer *b, CowReportData& a);

/**
 * Class generated from <tt>src/node/application/cowReporting/CowReportingPacket.msg</tt> by opp_msgc.
 * <pre>
 * packet CowReportingDataPacket extends ApplicationPacket {
 * 	CowReportData extraData;
 * }
 * </pre>
 */
class CowReportingDataPacket : public ::ApplicationPacket
{
  protected:
    CowReportData extraData_var;

  private:
    void copy(const CowReportingDataPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const CowReportingDataPacket&);

  public:
    CowReportingDataPacket(const char *name=NULL, int kind=0);
    CowReportingDataPacket(const CowReportingDataPacket& other);
    virtual ~CowReportingDataPacket();
    CowReportingDataPacket& operator=(const CowReportingDataPacket& other);
    virtual CowReportingDataPacket *dup() const {return new CowReportingDataPacket(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual CowReportData& getExtraData();
    virtual const CowReportData& getExtraData() const {return const_cast<CowReportingDataPacket*>(this)->getExtraData();}
    virtual void setExtraData(const CowReportData& extraData);
};

inline void doPacking(cCommBuffer *b, CowReportingDataPacket& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, CowReportingDataPacket& obj) {obj.parsimUnpack(b);}


#endif // _COWREPORTINGPACKET_M_H_
